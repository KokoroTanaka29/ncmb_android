name: Android

on: [push, pull_request]

env:
  MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}

jobs:
  build_and_test:

    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install git-crypt
      run: sudo apt install -y git-crypt gnupg2
    - name: Import private GPG key from variable GITHUB_SECRETS_PRIVATE_GPG_KEY
      run: echo "${{ secrets.SIGNING_GNUPG_SECRETKEY }}" | gpg2 --import
    - name: List GPG keys
      run: |
        gpg2 --list-keys
        gpg2 --list-secret-keys
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: ossrh
        server-username: ${{ secrets.OSSRH_USERNAME }}
        server-password: ${{ secrets.OSSRH_TOKEN }}
        gpg-private-key: ${{ secrets.SIGNING_GNUPG_SECRETKEY }}
        gpg-passphrase: ${{ secrets.SIGNING_GNUPG_PASSWORD }}
    - name: Restore gradle.properties
      env:
        GPG_KEY_ID: ${{ secrets.SIGNING_GNUPG_KEYID}}
        GPG_PRIVATE_KEY: ${{ secrets.SIGNING_GNUPG_SECRETKEY }}
        GPG_PASSPHRASE: ${{ secrets.SIGNING_GNUPG_PASSWORD }}
      shell: bash
      run: |
        echo "signing.gnupg.keyId=$GPG_KEY_ID" >> ./gradle.properties
        echo "signing.gnupg.password=$GPG_PASSPHRASE" >> ./gradle.properties
        echo "signing.gnupg.secretKeyRingFile=$GPG_PRIVATE_KEY" >> ./gradle.properties
    - name: Publish to Nexus repository
      run: |
        gradle publish 
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.SIGNING_GNUPG_PASSWORD }}